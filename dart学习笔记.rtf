{\rtf1\ansi\ansicpg936\cocoartf1671
{\fonttbl\f0\fnil\fcharset134 PingFangSC-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red26\green114\blue189;
\red252\green39\blue18;\red252\green39\blue18;\red128\green0\blue128;\red255\green255\blue255;\red217\green11\blue5;
}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\csgray\c0\c0;\cssrgb\c10588\c52941\c78824;
\cssrgb\c100000\c25271\c7591;\cssrgb\c100000\c25271\c7591;\cssrgb\c57919\c12801\c57269;\cssrgb\c100000\c100000\c100000;\cssrgb\c88946\c14202\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww32360\viewh18080\viewkind0
\deftab720
\pard\pardeftab720\sl320\partightenfactor0

\f0\fs48 \cf2 \cb3 \expnd0\expndtw0\kerning0
\'b9\'d9\'b7\'bd\'ce\'c4\'b5\'b5\'a3\'bahttps://www.dartlang.org/guides/language\
\'d6\'d0\'ce\'c4\'bc\'f2\'ca\'e9\'d1\'a7\'cf\'b0\'d7\'ca\'c1\'cf\'a3\'bahttps://www.jianshu.com/p/9e5f4c81cc7d \
\'cd\'f8\'c2\'e7\'c7\'eb\'c7\'f3\'bf\'f2\'bc\'dc\'a3\'bahttps://github.com/flutterchina/dio \cf4 \
\
\
\cf2 1.if\'d6\'d0 \'b1\'d8\'d0\'eb\'ce\'aa true \'b2\'c5\'ce\'aa\'d5\'e6 false\'ce\'aa\'bc\'d9 \'a3\'ac\'c6\'e4\'cb\'fb\'d6\'b5\'b2\'bb\'d0\'d0\'d5\'e2\'bf\'e9\'ba\'cdOC\'b2\'bb\'cd\'ac\
2.print\'b8\'f1\'ca\'bd\
	var tempInt = 4;\
	pirnt(\'a1\'b0Hello World \cf5 $\cf2 tempInt \cf5 $\{\cf2 tempInt4\cf5 \}\cf2 \'a1\'b1);\cf4 \
\cf2 3.\'d7\'a2\'ca\'cd\'ba\'cdOC\'d2\'bb\'d1\'f9 \'b5\'a5\'d0\'d0\cf5 //\cf4  \cf2 \'b6\'e0\'d0\'d0\cf5 /**/\
\cf2 4.\'c0\'e0\'d0\'cd int String List bool Map \'c8\'ab\'ca\'c7Object\
5.\'bf\'c9\'d2\'d4\'d4\'da\'ba\'af\'ca\'fd\'d6\'d0\'b6\'a8\'d2\'e5\'ba\'af\'ca\'fd\'a3\'a8\'c7\'b6\'cc\'d7\'bb\'f2\'d5\'df\'b1\'be\'b5\'d8\'ba\'af\'ca\'fd\'a3\'a9\
6.\'c0\'e0\'b5\'c4\'cb\'bd\'d3\'d0\'b1\'e4\'c1\'bf\'b2\'bb\'d0\'e8\'d2\'aaprivate\'c9\'f9\'c3\'f7,\'d4\'f6\'bc\'d3\cf5 _\cf2  \'bc\'b4\'bf\'c9 _privateVar  publicVar\cf4 \
\cf2 7.\'d3\'d0\'d7\'d4\'b6\'af\'c0\'e0\'d0\'cd\'cd\'c6\'b6\'cf \cf5 var\cf2  a = \'a1\'ae\'d7\'d6\'b7\'fb\'b4\'ae\'a1\'af;  a\'bb\'e1\'b1\'bb\'cd\'c6\'b6\'cf\'ce\'aa String\'c0\'e0\'d0\'cd \
8.\'c4\'ac\'c8\'cf\'d6\'b5 \'ca\'c7null \'d2\'f2\'ce\'aa\'d4\'dadart\'d6\'d0\'b6\'bc\'ca\'c7\'b6\'d4\'cf\'f3int\'d2\'b2\'ca\'c7\
9.final \'b1\'e4\'c1\'bf\'d6\'bb\'bf\'c9\'b8\'b3\'d6\'b5\'d2\'bb\'b4\'ce\'a3\'a8\'ba\'cdOC\'b5\'a5\'c0\'fd\'d6\'d0\'b5\'c4static\'c0\'e0\'cb\'c6\'a3\'a9 \'a3\'acconst\'ca\'c7\'b1\'e0\'d2\'eb\'c6\'da\'c8\'b7\'b6\'a8\'b5\'c4\'b3\'a3\'c1\'bf\'a3\'acClass\'bc\'b6\'b1\'f0\'d2\'aa\'d3\'c3 static const \
10.bool \'b5\'c4\'d6\'b5\'d6\'bb\'d3\'d0 true false \'a3\'ac\'b2\'bb\'c4\'dc\'ba\'cdOC\'d2\'bb\'d1\'f9 if\'a3\'a8\'b7\'c7 true or false\'a3\'a9 assert\'a3\'a8\'b7\'c7 true or false\'a3\'a9\
11.List \'c8\'e7\'b9\'fb\'b7\'c5\'c1\'cb int \'c4\'c7\'c3\'b4\'ba\'f3\'d0\'f8\'d2\'b2\'d6\'bb\'c4\'dc\'b7\'c5int \'a3\'ac\'c6\'e4\'cb\'fb\'c0\'e0\'d0\'cd\'d2\'b2\'d2\'bb\'d1\'f9\'a3\'ac\'cc\'ed\'bc\'d3const\'d4\'f2\'d6\'b5\'d4\'da\'b1\'e0\'d2\'eb\'c6\'da\'c8\'b7\'b6\'a8\
12.Map key\'b2\'bb\'c4\'dc\'d6\'d8\'b8\'b4\
13.Function \'b5\'a5\'d0\'d0\'ba\'af\'ca\'fd\'bf\'c9\'d2\'d4\'ca\'a1\'c2\'d4\'ce\'aa \cf5 => expr;\cf2  syntax is a shorthand for \{ return expr;\}  \'c0\'fdaFunc (int a) => a +1;\
14.Function  Optional named parameters \'a1\'a2 Optional positional parameters\
15.Flutter\'b5\'c4\'ba\'cb\'d0\'c4\'d0\'b4\'b7\'a8\'be\'cd\'ca\'c7 Optional named parameters \'c0\'fd\
	printStudentInfo (\cf6 \{\cf2 int age,String name,String place\cf6 \}\cf2 ) => print('$age$name$place'); \
	\'b5\'f7\'d3\'c3\'ca\'c7\'bf\'c9\'d2\'d4 \'b8\'c4\'b1\'e4\'cb\'b3\'d0\'f2\'a3\'ac\'b2\'bb\'cd\'ac\'b5\'c4\'b2\'ce\'ca\'fd\'b8\'f6\'ca\'fd\
	flutter\'d6\'d0\'b6\'a8\'d2\'e5\'c1\'cb@required \'c0\'b4\'d0\'de\'ca\'ce\'b2\'ce\'ca\'fd\'ca\'c7\'b1\'d8\'cc\'ee\'cf\'ee \{int age, @required String name\}\
	printStudentInfo(age: 10);\
  	printStudentInfo(name: 'flutter');\
  	printStudentInfo(place: '\'b1\'b1\'be\'a9',age: 10);\
16.\'b6\'d4\'cd\'ac\'d2\'bb\'b6\'d4\'cf\'f3\'c1\'ac\'d0\'f8\'b5\'f7\'d3\'c3\'ca\'b9\'d3\'c3 \cf5 ..\cf2  \'d3\'ef\'b7\'a8 \
17.\'c4\'e4\'c3\'fb\'ba\'af\'ca\'fd \
	([[Type] param1[, \'a1\'ad]]) \{ \
  		codeBlock; \
	\}; \
18.as  is is\'a3\'a1 \'c0\'e0\'cb\'c6\'d3\'da isKindOf\
19.\'cc\'d8\'ca\'e2\'b5\'c4\'b8\'b3\'d6\'b5\'d4\'cb\'cb\'e3\'b7\'fb  \cf5 ??=\cf2    \'c0\'fdvar a ??= value;  \'b5\'b1 a\'ce\'aa\'bf\'d5\'ca\'b1\'b2\'c5\'bd\'abvalue\'b5\'c4\'d6\'b5\'b8\'b3\'b9\'fd\'c8\'a5\
20.\'cc\'d8\'ca\'e2\'c8\'fd\'c4\'bf\'d4\'cb\'cb\'e3\'b7\'fb  a != nul ? a \'a3\'bab   \'b5\'c8\'bc\'db\'d3\'da a??b\
	 var a; var b = a ?? \'a1\'afhello world\'a1\'af;   \
21.  \cf5 ?.\cf2    foo?.bar\'a1\'a1\'b5\'b1foo\'ce\'aanull\'ca\'b1\'b2\'bb\'bb\'e1\'b1\'c0\'c0\'a3\'b7\'b5\'bb\'d8null\'a3\'ac foo.bar \'b5\'b1foo\'ce\'aanull\'ca\'b1\'be\'cd\'b1\'c0\'c0\'a3\'c1\'cb\
22.switch \'b1\'c8\'bd\'cf\'b6\'d4\'cf\'f3\'b1\'d8\'d0\'eb\'ca\'c7\'cd\'ac\'b8\'f6\'c0\'e0\'b5\'c4\'b6\'d4\'cf\'f3\'a3\'a8\'d7\'d3\'c0\'e0\'b2\'bb\'d0\'d0\'a3\'a9\'a3\'accase\'d6\'d0\'ce\'aa int String\'b5\'c8\'b6\'bc\'d0\'d0\'a3\'ac\'b5\'ab\'b2\'bb\'c4\'dcoverride  ==  operator\
23.assert \'d4\'dadebug\'c4\'a3\'ca\'bd\'cf\'c2\'ba\'c3\'ca\'b9 \'d4\'da\'c9\'fa\'b3\'c9\'bb\'b7\'be\'b3\'d6\'d0 \'ca\'a7\'d0\'a7 --enable-asserts.\
24.dart \'d6\'a7\'b3\'d6\'b6\'e0\'bc\'cc\'b3\'d0\
25. new \'bf\'c9\'d0\'b4\'bf\'c9\'b2\'bb\'d0\'b4 \'d2\'bb\'d1\'f9\'b5\'c4\'d0\'a7\'b9\'fb\'a3\'a8\'c3\'bb\'d0\'b4\'d4\'f2\'c4\'ac\'c8\'cf\'cc\'ee\'b3\'e4\'a3\'a9\
26.\'d7\'d3\'c0\'e0\'b2\'bb\'bc\'cc\'b3\'d0\'b8\'b8\'c0\'e0\'b9\'b9\'d4\'ec\'b7\'bd\'b7\'a8\
27.\'ba\'cdOC\'d2\'bb\'d1\'f9\'d7\'d4\'b6\'af\'c9\'fa\'b3\'c9 getter \'ba\'cd setter \'a3\'acfinal\'c0\'e0\'d0\'cd\'ca\'b5\'c0\'fd\'b1\'e4\'c1\'bf\'b2\'bb\'c9\'fa\'b3\'c9 setter\
28.\'c0\'e0\'c4\'da\'d7\'d4\'bc\'ba\'d3\'c3this\'a3\'ac\'cd\'a8\'b3\'a3\'bf\'c9\'d2\'d4\'ca\'a1\'c2\'d4\'a3\'ac\'b3\'fd\'b7\'c7\'b3\'f6\'cf\'d6conflict\'a3\'a8\'c3\'fc\'c3\'fb\'b3\'e5\'cd\'bb\'a3\'a9\
\cf7 29.\'b9\'b9\'d4\'ec\'b7\'bd\'b7\'a8\'c4\'c7\'bf\'e9\'d4\'d9\'ba\'c3\'ba\'c3\'bf\'b4\'bf\'b4\'a3\'ac\'d7\'d3\'c0\'e0\'d4\'f5\'c3\'b4\'b5\'f7\'d3\'c3\'b8\'b8\'c0\'e0\'b9\'b9\'d4\'ec\'b7\'bd\'b7\'a8\cf2 \
30.\'b3\'e9\'cf\'f3\'c0\'e0\'b2\'bb\'c4\'dc\'ca\'b5\'c0\'fd\'bb\'af\'a3\'ac\'b9\'d8\'bc\'fc\'d7\'d6abstract\'a3\'ac\'b6\'a8\'d2\'e5\'bc\'cc\'b3\'d0\'b8\'c3\'c0\'e0\'d2\'aa\'ca\'b5\'cf\'d6\'b5\'c4\'d2\'bb\'d0\'a9\'b7\'bd\'b7\'a8\'a3\'ac\'b6\'a8\'d2\'e5\'bd\'d3\'bf\'da\'ba\'cdOC\'b5\'c4 @protocol\'c0\'e0\'cb\'c6\
31.Implicit interfaces \'d2\'fe\'ca\'bd\'bd\'d3\'bf\'da\'a3\'acA\'c0\'e0\'cf\'eb\'d3\'c3B\'c0\'e0\'b5\'c4API\'b5\'ab\'ca\'c7\'b2\'bb\'cf\'eb\'bc\'cc\'b3\'d0B\'c0\'e0\'a3\'ac\'c4\'c7\'c3\'b4\'ca\'b9\'d3\'c3 implements\'b9\'d8\'bc\'fc\'d7\'d6\'a3\'ac\'c0\'e0\'ca\'b5\'cf\'d6B\'c0\'e0\'b5\'c4API\
31.\'bc\'cc\'b3\'d0\'b9\'d8\'bc\'fc\'d7\'d6 extends\cb8 \
\cb3 32.\'c3\'b6\'be\'d9\'c0\'e0\'d0\'cd enum Color \{ red, green, blue \} \'a3\'ac \'bb\'f1\'c8\'a1\'b6\'d4\'d3\'a6\'ca\'fd\'d7\'e9 List<Color> colors =Color.values;\
33. mixin\'a3\'ac\'d4\'da\'bc\'cc\'b3\'d0\'bd\'e1\'b9\'b9\'c9\'cf\'b8\'b4\'d3\'c3\'c4\'b3\'b8\'f7\'c0\'e0\'b5\'c4\'b4\'fa\'c2\'eb\'a3\'ac\'d4\'daDart2.1\'d6\'ae\'c7\'b0\'d3\'c3abstract class \'b4\'fa\'cc\'e6\
34.\'c0\'e0\'b1\'e4\'c1\'bf\'a1\'a2\'c0\'e0\'b7\'bd\'b7\'a8\'d4\'da\'c7\'b0\'b1\'df\'bc\'d3 static\'a3\'ac\'c0\'e0\'b7\'bd\'b7\'a8\'d6\'d0\'c3\'bb\'d3\'d0this\
35.\'b7\'ba\'d0\'cd \cf5 <\'a1\'ad> \cf2 \'a3\'ac\'b7\'c5\'c8\'eb\'b7\'c7\'b7\'ba\'d0\'cd\'b6\'d4\'cf\'f3\'b1\'e0\'d2\'eb\'c6\'f7\'bb\'e1\'b1\'a8\'b4\'ed\'a3\'ac\'bf\'c9\'d2\'d4\'bc\'f5\'c9\'d9\'b4\'fa\'c2\'eb\'c8\'df\'d3\'e0\
	abstract class Cache<T> \{\
		T getByKey(String key);\
		void setByKey(String key, T value);\
	\}\
36.\'b5\'bc\'c8\'ebdart\'d7\'d4\'b4\'f8\'bf\'e2 \cf5 import 'dart:html';\cf2 \
	\'b5\'bc\'c8\'eb\'c6\'e4\'cb\'fb\'bf\'e2 \cf5 import 'package:test/test.dart';\cf2 \
	// Import only foo.\
	import 'package:lib1/lib1.dart' show foo;\
	// Import all names EXCEPT foo.\
	import 'package:lib2/lib2.dart' hide foo;\
	\'c8\'e7\'b9\'fb\'b2\'bb\'cd\'ac\'bf\'e2\'d3\'d0\'d6\'d8\'c3\'fb\'b7\'bd\'b7\'a8\'d4\'f2\'d7\'d4\'b6\'a8\'d2\'e5\'bf\'e2\'c3\'fb import 'package:lib2/lib2.dart' \cf6 as lib2;\cf2 \
	import 'package:lib1/lib1.dart';\
	import 'package:lib2/lib2.dart' as lib2;\
	// Uses Element from lib1.\
	Element element1 = Element();\
	// Uses Element from lib2.\
	lib2.Element element2 = lib2.Element();\
37.\'c0\'c1\'bc\'d3\'d4\'d8\'bf\'e2 import 'package:greetings/hello.dart' \cf6 deferred as\cf2  hello;\
	\'ca\'b9\'d3\'c3:Future greet() async \{\
  			\cf6 await hello.loadLibrary();\cf2 \
  			hello.printGreeting();\
		   \}\
38.\'d2\'ec\'b2\'bd\'ce\'ca\'cc\'e2 await\'b9\'d8\'bc\'fc\'d7\'d6\'b1\'d8\'d0\'eb\'d3\'c3\'d4\'daasync\'ba\'af\'ca\'fd\'d6\'d0\'c0\'fd\'d7\'d3,\'b2\'a2\'d4\'da\'d2\'bb\'b8\'f6\'ba\'af\'ca\'fd\'d6\'d0\'ca\'b9\'d3\'c3\'b6\'e0\'b4\'ceawait\
	Future checkVersion() \cf6 async\cf2  \{\
		var version = \cf6 await\cf2  lookUpVersion();\
		// Do something with version\
	\}\
39.async\'ba\'af\'ca\'fd\'b7\'b5\'bb\'d8 Future\'b6\'d4\'cf\'f3\
40.await for \'b9\'d8\'bc\'fc\'d7\'d6\'b1\'d8\'d0\'eb\'d3\'c3\'d4\'daasync\'ba\'af\'ca\'fd\'d6\'d0\'c0\'fd\'d7\'d3, break\'a1\'a2return\'cc\'f8\'b3\'f6loop\
	Future main() \cf6 async\cf4  \cf2 \{\
		// ...\
		\cf6 await for\cf2  (var request in requestServer) \{\
			handleRequest(request);\
		\}\
		// ...\
	\}\
41.\'c9\'fa\'b3\'c9\'c6\'f7 \
	Iterable<int> naturalsTo(int n) \cf6 sync*\cf2  \{\
		int k = 0;\
		while (k < n) \cf9 yield\cf2  k++;\
	\}\
42.class \'ca\'b5\'cf\'d6 call\'b7\'bd\'b7\'a8 \'bf\'c9\'d2\'d4\'b6\'d4\'c0\'e0\'b6\'d4\'cf\'f3\'bd\'f8\'d0\'d0\'b5\'f7\'d3\'c3 \
43.typedefs (2.1\'b0\'e6\'b1\'be\'bd\'f6\'cf\'de\'ba\'af\'ca\'fd) \'c0\'fd\'d7\'d3  typedef Compare = int Function(Object a, Object b);\
44.\'b7\'bd\'b7\'a8\'d7\'a2\'ca\'cd\'cb\'b5\'c3\'f7 \cf6 ///\cf2  \'ba\'cdOC\'d2\'bb\'d1\'f9\
45.\'d4\'da\'d7\'a2\'ca\'cd\'d6\'d0\'ca\'b9\'d3\'c3 [] \'a3\'ac\'d4\'da\'c6\'e4\'d6\'d0\'b7\'c5\'c8\'eb\'b1\'e4\'c1\'bf \'b7\'bd\'b7\'a8\'b5\'c8\'bb\'e1\'b5\'c3\'b5\'bd\'cf\'e0\'d3\'a6\'b5\'c4\'b1\'e0\'d2\'eb\'c6\'f7\'cc\'e1\'ca\'be\
	/// [age]\'c4\'ea\'c1\'e4\
	int age;\
46.@deprecated @override\
47.You can define your own metadata annotations. Here\'a1\'afs an example of defining a @todo annotation that takes two arguments:\
	library todo;\
	class Todo \{\
		final String who;\
		final String what;\
		const Todo(this.who, this.what);\
	\}\
	import 'todo.dart';\
	@Todo('seth', 'make this do something')\
	void doSomething() \{\
		print('do something');\
	\}\
48.\
49\
50.\
\cf4 \
\
\
\
\
\
\
}